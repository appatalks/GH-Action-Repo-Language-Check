name: List Repository Languages
on:
  #workflow_dispatch:
  workflow_call:
    inputs:
      repo-urls:
        description: 'List of Repository URLs (comma-separated)'
        required: true
        default: ''
        type: string
      use-secret-patLang:
        description: 'Use PAT? secrets.PATLANG'
        required: false
        default: false
        type: boolean
    secrets:
      PATLANG:
        required: false
        
jobs:
  list-languages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract owner and repo from URLs
        id: extract
        run: |
          echo "----" >> $GITHUB_STEP_SUMMARY
          echo "**Owner/Repository Language Report**" >> $GITHUB_STEP_SUMMARY
          IFS=',' read -ra URLS <<< "${{ inputs.repo-urls }}"
          declare -a FORMATTED_RESULTS=()
          for URL in "${URLS[@]}"; do
            # Extract owner and repo from the URL
            OWNER=$(echo $URL | awk -F/ '{print $4}')
            REPO=$(echo $URL | awk -F/ '{print $5}')
            
            # Get repository languages
            if [[ ${{ inputs.use-secret-patLang }} == true ]]; then
              RESPONSE=$(curl -s -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.PATLANG }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/$OWNER/$REPO/languages)
            else
              RESPONSE=$(curl -s -L \
                -H "Accept: application/vnd.github+json" \
                -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                -H "X-GitHub-Api-Version: 2022-11-28" \
                https://api.github.com/repos/$OWNER/$REPO/languages)
            fi

            # Error Response
            if [[ "$RESPONSE" == *'Not Found'* ]]; then
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "\`$OWNER/$REPO\` Repo not found or no access" >> $GITHUB_STEP_SUMMARY
              continue
            fi

            if [[ "$RESPONSE" == *'error'* ]]; then
              echo $RESPONSE > error.md 
              continue
            fi

            # Check if the response is an array, as expected
              # Calculate the total lines of code
              total_lines=$(echo "$RESPONSE" | jq 'values | add')
              
            # Check null for language
              if [[ "$total_lines" == *"null"* ]]; then
                echo "\`$OWNER/$REPO\`: Language not identified"
                echo "" >> $GITHUB_STEP_SUMMARY
                echo "[\`\`\`$OWNER/$REPO\`\`\`]($URL)<br>" >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                echo "Language not identified" >> $GITHUB_STEP_SUMMARY
                echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
                continue
              fi
              
              # Format repository languages
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "[\`\`\`$OWNER/$REPO\`\`\`]($URL)" >> $GITHUB_STEP_SUMMARY
              echo "\`\`\`yml" >> $GITHUB_STEP_SUMMARY
              echo "$RESPONSE" | jq -r 'to_entries[] | "\(.key): \(.value / '"$total_lines"' * 100.0)%"' | while read line; do
                echo "$line" 
                language=$(echo "$line" | awk -F ': ' '{print $1}')
                percentage=$(echo "$line" | awk -F ': ' '{printf "%.2f", $2}')
                FORMATTED_RESULTS=$(printf "%s: %s%%\n" "$language" "$percentage")
                echo $FORMATTED_RESULTS >> $GITHUB_STEP_SUMMARY
              done
              echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
              cat $GITHUB_STEP_SUMMARY > summary.md
          done

          # Extract the summary from the GitHub step
          summary=$(cat $GITHUB_STEP_SUMMARY)
    
          # Generate Global Language Summary
          repo_count=$(grep -cE '^\[```' $GITHUB_STEP_SUMMARY)
          echo "**REPOSITORY PROGRAMMING LANGUAGE SUMMARY**" > lang_sum.md
          echo "" >> lang_sum.md
          echo "**Scanned Repository Count**: $repo_count" >> lang_sum.md
          echo "" >> lang_sum.md
          echo "Languages and Percentages: " >> lang_sum.md
          echo "" >> lang_sum.md
          echo "\`\`\`yml" >> lang_sum.md
          
          cat $GITHUB_STEP_SUMMARY | awk '
            BEGIN {
              FS=": ";
              OFS=": ";
              total_repos = 0;
              unident_lang = 0;
              null_value = 0;
            }
            /^\[.*\]\(.*\)$/ {
              repo_link = $1;
              sub(/^\[|\]$/,"",repo_link);
              repos[repo_link]++;
              total_repos++;
            }
            /^[a-zA-Z].*: [0-9.]+%$/ {
              language = $1;
              sub(/:.*/,"",language);
              percentage = $2;
              sub(/%.*/,"",percentage);
              languages[language] += percentage;
            }
            /Language not identified/ {
              unident_lang++;
            }
            END {
              print "-- Discovered Repository Count", total_repos;
              print "-- Language Not Identified Repo Count", unident_lang;
              for (language in languages) {
                printf "%s: %.2f%%\n", language, (languages[language] / total_repos);
              }
            }
          ' | sort -k2 -n -r >> lang_sum.md
          echo "" >> lang_sum.md
          echo "\`\`\`" >> lang_sum.md
          cat lang_sum.md > $GITHUB_STEP_SUMMARY
          cat summary.md >> $GITHUB_STEP_SUMMARY
          cat error.md >> $GITHUB_STEP_SUMMARY
          
        shell: bash
